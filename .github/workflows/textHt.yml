# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Delete existing gh-pages branch
        run: |
          git branch -D gh-pages || echo "Branch gh-pages does not exist"
      - name: Generate HTML file
        run: |
          awk -F"|" 'BEGIN {print "<html><head><style>table {font-family: arial, sans-serif;border-collapse: collapse;width: 100%;}td, th {border: 1px solid #dddddd;text-align: left;padding: 8px;}.success {background-color: #00FF00;}.skipped {background-color: #FFFF00;}.failed {background-color: #FF0000;}</style></head><body><h2>Application Deployment Success Rate</h2><table><tr><th>Application</th><th>Region</th><th>Version</th><th>Result</th></tr>"} {if ($4 == "success") {print "<tr><td>" $1 "</td><td>" $2 "</td><td>" $3 "</td><td class=\"success\">" $4 "</td></tr>"} else if ($4 == "skipped") {print "<tr><td>" $1 "</td><td>" $2 "</td><td>" $3 "</td><td class=\"skipped\">" $4 "</td></tr>"} else if ($4 == "failed") {print "<tr><td>" $1 "</td><td>" $2 "</td><td>" $3 "</td><td class=\"failed\">" $4 "</td></tr>"}} END {print "</table></body></html>"}' app_final_result.txt > index.html
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PAT_TOKEN }}
          publish_dir: ./
          publish_branch: gh-pages
          allow_empty_commit: false
          keep_files: false
          force_orphan: false
          enable_jekyll: false
          disable_nojekyll: false
          exclude_assets: .github
